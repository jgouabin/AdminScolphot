#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : COL_FTPAdmin
 major_version : 26
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x19ec9f560058dbf9
 internal_properties : BgAAAAYAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  type_code : 31
  p_codes : []
  procedures :
   -
     name : gF_ConnexionFTP
     procedure_id : 1868043412058067926
     type_code : 15
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] gF_ConnexionFTP ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	booléen : // 	Aucune
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      PROCEDURE gF_ConnexionFTP()
      
      //gvcConfigurationFTP est composée de
      //	gsAdresseFTP	 		est une chaîne			// adresse du site FTP					Cnx.Adresse
      //	gsNomUtilisateur 		est une chaîne			// nom de l'utilisateur				Cnx.Utilisateur
      //	gsMDPUtilisateur 		est une chaîne			// mot de passe de l'utilisateur		Cnx.MDP
      //	gbAnonyme 				est un booléen			// connexion anonyme 					Cnx.Anonyme
      //	gnNumeroport	 		est un entier 			// numéro du port FTP du serveur		Cnx.Port
      //	gndelai 				est un entier 			// délai avant abandon					Cnx.Delai
      //	gnTypeConnexion 		est un booléen			// type de connexion au serveur 		Cnx.TypeConnexion (active ou passive)
      //	gsProfil 				est une chaîne			// profil en cours
      //	gnTypeTransfert 		est un entier				// transfert ASCII ou Binaire			Cnx.TypeTransfert
      //	gnSécuritéConnexion 	est un entier				// sécurité de la connexion				Cnx.Securite
      
      //	gbIgnorerErreur 		est un booléen			// ignorer les erreurs de certificat ?	Cnx.IgnoreErreur
      //FIN
      
      //Existe t-il une connexion internet ?
      //-------------------------------------
      //si pas InternetConnecté() ALORS
      //	gbConnecteAuServeurFTP = faux
      //	renvoyer -2
      //FIN
      
      // s'il s'agit d'une adresse IP alors
      //---------------------------------------
      SI Val(Remplace(gvcConfigurationFTP.gsAdresseFTP,".","0"))<>0 ALORS
      	// On met en forme l'adresse IP du site FTP
      	gP_MiseEnFormeAdrIP()
      FIN
      
      message("Connexion au serveur FTP  "+gvcConfigurationFTP.gsAdresseFTP)
      // si un site FTP est précisé
      SI gvcConfigurationFTP.gsAdresseFTP <> "" ALORS 
      	
      	// On ouvre la connexion	
      	gP_ConnexionSiteFTP()
      	
      	SI gvcConnexionFTP.nIDConnexion<>-1 ALORS 
      		si gbTrace alors trace("La connexion est établie")
      		renvoyer vrai
      	SINON
      		// On indique la cause de non connexion
      		erreur(<§@18827961010f46430001§>, ErreurInfo())
      		renvoyer faux
      	FIN
      SINON
      	// On informe l'utilisateur
      	erreur(<§@18827961010f46430002§>)
      FIN
      
      
      renvoyer faux
     type : 458752
   -
     name : gP_MiseEnFormeAdrIP
     procedure_id : 1868043828669927664
     type_code : 15
     code : |1+
      // Syntaxe :
      //gP_MiseEnFormeAdrIP ()
      // Mise en forme de l'adresse IP pour compatibilité IIS 5.0
      // Pour être compatible avec IIS 5.0, les adresses IP doivent respecter une notation
      // Ex : 10.132.5.4 => Valide
      // mais 10.132.005.004 => Non valide (et message d'erreur non correspondant)
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      
      PROCEDURE gP_MiseEnFormeAdrIP()                           
      
      
      sAdresseIP EST UNE CHAINE 
      sPortionAdresse EST UNE CHAINE
      nValeurAdresse EST UN entier
      i EST UN entier 
      
      sAdresseIP = gvcConfigurationFTP.gsAdresseFTP
      gvcConfigurationFTP.gsAdresseFTP = ""
      
      POUR i=1 A 4
      	// On extrait les portions de l'adresse IP une par une
      	sPortionAdresse = ExtraitChaîne(sAdresseIP,i,".")
      	// On transforme en entier pour supprimer les 0 inutiles
      	nValeurAdresse = Val(sPortionAdresse)					
      	// On reconstruit l'adresse IP
      	SI gvcConfigurationFTP.gsAdresseFTP <> "" ALORS
      		gvcConfigurationFTP.gsAdresseFTP = gvcConfigurationFTP.gsAdresseFTP + "." + nValeurAdresse 
      	SINON
      		gvcConfigurationFTP.gsAdresseFTP = nValeurAdresse 
      	FIN	
      FIN
      
     type : 458752
   -
     name : gP_ConnexionSiteFTP
     procedure_id : 1868044056303246618
     type_code : 15
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //gP_ConnexionSiteFTP ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      PROCEDURE gP_ConnexionSiteFTP()
      
      Sablier(Vrai)
      
      
      // Variables locales
      sProtocole 	est une chaîne
      bAvance 		est un booléen
      
      // On recherche le protocole selon la sécurité de la connexion
      SELON gvcConfigurationFTP.gnSécuritéConnexion
      	CAS 0,1 		// non sécurisée	
      		sProtocole = ""
      	
      	CAS 2 		// sécurisée : protocole SFTP
      		sProtocole = "sftp://"
      	
      	CAS 3		// sécurisée : protocole FTPS
      		sProtocole = "ftps://"
      	
      	CAS 4		// sécurisée : protocole FTPES	
      		sProtocole = "ftpes://"
      		
      FIN
      
      SI gvcConfigurationFTP.gbIgnorerErreur = Vrai ALORS
      	FTP.IgnoreErreur = FTPIgnoreNomCertificatInvalide + FTPIgnoreCertificatInvalide + FTPIgnoreCertificatExpiré
      SINON
      	FTP.IgnoreErreur = 0
      FIN
      Multitâche(-1)
      
      bAvance = (gvcConfigurationFTP.gnNumeroport > 0)
      
      SI gvcConfigurationFTP.gbAnonyme=Faux ALORS
      	// connexion nominative
      	si pas bAvance alors
      		// paramétrage standard
      		gvcConnexionFTP.nIDConnexion = FTPConnecte(sProtocole+gvcConfigurationFTP.gsAdresseFTP,gvcConfigurationFTP.gsNomUtilisateur,gvcConfigurationFTP.gsMDPutilisateur)		
      	SINON
      		// paramétrage avancé
      		gvcConnexionFTP.nIDConnexion = FTPConnecte(sProtocole+gvcConfigurationFTP.gsAdresseFTP,gvcConfigurationFTP.gsNomUtilisateur,...
      			gvcConfigurationFTP.gsMDPUtilisateur,gvcConfigurationFTP.gnNumeroport,gvcConfigurationFTP.gnTypeConnexion)//,gvcConfigurationFTP.gnDelai)
      	FIN  	
      SINON
      //	// Connexion anonyme
      	SI PAS bAvance ALORS
      		// paramétrage standard
      		gvcConnexionFTP.nIDConnexion = FTPConnecte(sProtocole+gvcConfigurationFTP.gsAdresseFTP)
      	SINON
      		 //paramétrage avancé
      		gvcConnexionFTP.nIDConnexion = FTPConnecte(sProtocole+gvcConfigurationFTP.gsAdresseFTP,"","",gvcConfigurationFTP.gnNumeroPort,gvcConfigurationFTP.gnTypeConnexion,gvcConfigurationFTP.gnDelai)
      	FIN  	
      FIN                    
      
      Sablier(Faux)
      Multitâche(-1)
     type : 458752
   -
     name : gF_RecupereFichier
     procedure_id : 1868045520887174160
     type_code : 15
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] gF_RecupereFichier (<Nom>)
      //
      // Paramètres :
      //	Nom :<indiquez ici le rôle de Nom>
      // Valeur de retour :
      // 	booléen : // 	Aucune
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      //	nTaille : <indiquez ici le rôle de nTaille>
      //	sAttribut : <indiquez ici le rôle de sAttribut>
      //	sDate : <indiquez ici le rôle de sDate>
      //	sHeure : <indiquez ici le rôle de sHeure>
      //	nParam : <indiquez ici le rôle de nParam>
      PROCEDURE gF_RecupereFichier(Nom)//, nTaille, sAttribut, sDate, sHeure, nParam)
      
      // Procédure  de FtpListefichie
      //-----------------------------------------
      
      nInd 	est un entier
      sTemp 	est une chaîne
      bOk  	est un booléen
      
      si gbTrace alors trace("Fichier à récupérer "+Nom)
      
      
      //SI fFichierExiste(gvcModeReception.sRepDestination+["\"]+fExtraitChemin(Nom,fFichier+fExtension)) = Vrai ALORS
      	selon gvcModeReception.nRemplace
      		cas 1 // Ecraser
      		// on continue
      		cas 2 // Renommer
      			sTemp = gvcModeReception.sRepDestination+["\"]+fExtraitChemin(Nom,fFichier)
      			BOUCLE
      				nInd++
      				si nInd > 1000 alors sortir
      				SI pas fFichierExiste(sTemp+"_"+NumériqueVersChaîne(nInd)+fExtraitChemin(Nom,fExtension)) ALORS
      					si pas fRenomme(sTemp+fExtraitChemin(Nom,fExtension),sTemp+"_"+NumériqueVersChaîne(nInd)+fExtraitChemin(Nom,fExtension)) ALORS
      						erreur(ErreurInfo(errMessage))	
      						renvoyer vrai
      					sinon
      						sortir
      					FIN
      				FIN
      			FIN
      		cas 3 // Demander
      			si pas OuiNon(non,ChaîneConstruit(MessTraduit("",4),fExtraitChemin(Nom,fFichier+fExtension))) ALORS
      				renvoyer vrai	
      			FIN
      		AUTRE CAS // rien
      			renvoyer vrai
      	FIN
      //FIN
      
      // Récupération du fichier
      //-----------------------------------
      SI gvcConfigurationFTP.gnTypeTransfert = 1 ALORS
      	// Transfert en mode ASCII
      //	bOk = FTPRécupère(gvcConnexionFTP.nIDConnexion,Nom,gvcModeReception.sRepDestination+["\"]+fExtraitChemin(Nom,fFichier+fExtension),gP_Jauge,FTPModeASCII)
      	bOk = FTPRécupère(gvcConnexionFTP.nIDConnexion,Nom,gvcModeReception.sRepDestination+["\"]+fExtraitChemin(Nom,fFichier+fExtension),"",FTPModeASCII)
      SINON
      	// Transfert en mode binaire
      	bOk = FTPRécupère(gvcConnexionFTP.nIDConnexion,Nom,gvcModeReception.sRepDestination+["\"]+fExtraitChemin(Nom,fFichier+fExtension),"",FTPModeBinaire)
      FIN
      
      SI bOk ALORS
      	message(ChaîneConstruit("Fichier : %1"+rc+" Réception réussie" ,Nom))	
      	
      	// Suppression du fichier sur le serveur FTP  ?
      	// -------------------------------------
      	SI gbTrace ALORS Trace("Mode suppression = "+gvcModeReception.bSupprime)
      	
      	SI	gvcModeReception.bSupprime ALORS
      		SI PAS FTPSupprimeFichier(gvcConnexionFTP.nIDConnexion,Nom) ALORS
      			erreur(ErreurInfo(errMessage))	 
      		FIN
      	FIN
      	RENVOYER Vrai
      SINON
      	erreur(ErreurInfo(errMessage))
      	RENVOYER Faux
      FIN
     type : 458752
   -
     name : gP_ConnexionSiteFTP1
     procedure_id : 1868055416491900014
     type_code : 15
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //gP_ConnexionSiteFTP ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // Indiquez ici un exemple d'utilisation.
      //
      PROCEDURE gP_ConnexionSiteFTP1()
      
      Sablier(Vrai)
      
      
      // Variables locales
      sProtocole 	est une chaîne
      bAvance 		est un booléen
      
      // On recherche le protocole selon la sécurité de la connexion
      SELON gvcConfigurationFTP.gnSécuritéConnexion
      	CAS 0,1 		// non sécurisée	
      		sProtocole = ""
      	
      	CAS 2 		// sécurisée : protocole SFTP
      		sProtocole = "sftp://"
      	
      	CAS 3		// sécurisée : protocole FTPS
      		sProtocole = "ftps://"
      	
      	CAS 4		// sécurisée : protocole FTPES	
      		sProtocole = "ftpes://"
      		
      FIN
      
      SI gvcConfigurationFTP.gbIgnorerErreur = Vrai ALORS
      	FTP.IgnoreErreur = FTPIgnoreNomCertificatInvalide + FTPIgnoreCertificatInvalide + FTPIgnoreCertificatExpiré
      SINON
      	FTP.IgnoreErreur = 0
      FIN
      Multitâche(-1)
      
      bAvance = (gvcConfigurationFTP.gnNumeroport > 0)
      
      SI gvcConfigurationFTP.gbAnonyme=Faux ALORS
      	// connexion nominative
      	si pas bAvance alors
      		// paramétrage standard
      		gvcConnexionFTP.nIDConnexion = FTPConnecte(sProtocole+gvcConfigurationFTP.gsAdresseFTP,gvcConfigurationFTP.gsNomUtilisateur,gvcConfigurationFTP.gsMDPutilisateur)		
      	SINON
      		// paramétrage avancé
      		gvcConnexionFTP.nIDConnexion = FTPConnecte(sProtocole+gvcConfigurationFTP.gsAdresseFTP,gvcConfigurationFTP.gsNomUtilisateur,...
      			gvcConfigurationFTP.gsMDPUtilisateur,gvcConfigurationFTP.gnNumeroport,gvcConfigurationFTP.gnTypeConnexion)//,gvcConfigurationFTP.gnDelai)
      	FIN  	
      SINON
      //	// Connexion anonyme
      	SI PAS bAvance ALORS
      		// paramétrage standard
      		gvcConnexionFTP.nIDConnexion = FTPConnecte(sProtocole+gvcConfigurationFTP.gsAdresseFTP)
      	SINON
      		 //paramétrage avancé
      		gvcConnexionFTP.nIDConnexion = FTPConnecte(sProtocole+gvcConfigurationFTP.gsAdresseFTP,"","",gvcConfigurationFTP.gnNumeroPort,gvcConfigurationFTP.gnTypeConnexion,gvcConfigurationFTP.gnDelai)
      	FIN  	
      FIN                    
      
      Sablier(Faux)
      Multitâche(-1)
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BgAAAAYAAAA6ih3UbgNXHwTtiPSFUEj+2fi/m7v4QV2rqidAupM=
  original_name : COL_SansNom1
resources :
 string_res :
  identifier : 0x19ec9f490056a7f8
  internal_properties : BgAAAAYAAAAnMYFQ1bL/vz9ehh7L22SNNSlIzGTOI8h5F/WtgDNP
  strings :
   -
     text :
      fr-FR : Non connecté
     index : 0
   -
     text :
      fr-FR : La connexion n'a pas été établie.
     index : 1
   -
     text :
      fr-FR : Vous devez spécifier l'adresse du serveur FTP.
     index : 2
   -
     text :
      fr-FR : "Le fichier %1 existe déjà\r\nConfirmez-vous son remplacement par le fichier présent sur le serveur ?"
     index : 3
   -
     text :
      fr-FR : "Le fichier %1 existe déjà\r\nConfirmez-vous son remplacement par le fichier présent en local ?"
     index : 4
   -
     text :
      fr-FR : "Fichier : %1 \r\n    Envoi réussi  "
     index : 5
   -
     text :
      fr-FR : "Fichier : %1 \r\n    Réception réussie  "
     index : 6
   -
     text :
      fr-FR : "%1\r\n------------------\r\n%2\r\n         =>\r\n%3"
     index : 7
custom_note :
 internal_properties : BgAAAAYAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
